// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "mysql", "sqlite", "sqlserver" depending on your database
  url      = env("DATABASE_URL")
}

model User {
  userId    Int    @id @default(autoincrement())
  username  String @unique
  email     String @unique
  password  String
  trips     Trip[]
  passengers Passenger[]
}

model Trip {
  tripId                Int      @id @default(autoincrement())
  userId                Int
  user                  User     @relation(fields: [userId], references: [userId])
  carrierCode           String
  flightNumber          Int
  departureAirportCode  String
  arrivalAirportCode    String
  scheduledDepartureDate String
  scheduledDepartureTime String
  scheduledArrivalTime   String
  createdAt             DateTime @default(now())
  segments              Segment[]

  @@unique([userId, carrierCode, flightNumber, scheduledDepartureDate])
}

model Segment {
  segmentId       Int      @id @default(autoincrement())
  tripId          Int
  trip            Trip     @relation(fields: [tripId], references: [tripId])
  boardPointCode  String
  offPointCode    String
  scheduledSegmentDuration String
}

model Flight {
  flightId              String   @id
  carrierCode           String
  flightNumber          Int
  scheduledDepartureDate String
  passengers            Passenger[]

  @@unique([carrierCode, flightNumber, scheduledDepartureDate])
}

model Passenger {
  passengerId           Int      @id @default(autoincrement())
  userId                Int
  user                  User     @relation(fields: [userId], references: [userId])
  flightId              String
  flight                Flight   @relation(fields: [flightId], references: [flightId])
  seatNumber            String

  @@unique([flightId, seatNumber])
  @@unique([flightId, userId])
}


